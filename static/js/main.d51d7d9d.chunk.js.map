{"version":3,"sources":["Assets/hog-bg.webp","Assets/hp-title.png","Components/Appbar/Styles.ts","Components/Appbar/Appbar.tsx","Interfaces/IDataGame.ts","Components/Header/Styles.ts","Components/Header/Header.tsx","Components/Panel/IPanel.ts","Interfaces/IForm.ts","Interfaces/IQuestion.ts","Utils/Verify.tsx","Components/Form/Styles.ts","Components/Form/Question.tsx","Components/Form/Form.tsx","Components/Form2/Styles.ts","Components/Form2/Question.tsx","Components/Form2/Form.tsx","Components/Form3/Styles.ts","Components/Form3/Question.tsx","Components/Form3/Form.tsx","Components/Form4/Styles.ts","Components/Form4/Question.tsx","Components/Form4/Form.tsx","Components/SubHeader/Styles.ts","Components/SubHeader/Subheader.tsx","App/Styles.ts","App/App.tsx","index.tsx"],"names":["module","exports","Nav","styled","AppBar","Title","Typography","variant","noWrap","DataGame","Container","div","bg","subtitle","src","titleIMG","alt","width","align","dataPanel","initialValues","questionA","questionB","questionC","questionD","questionE","questionF","questionG","questionH","questionI","questionJ","Questions","id","name","question","answerA","answerB","answerC","answerD","VerifyHat","values","value","alert","window","location","reload","makeStyles","theme","main","display","alignItems","justifyContent","margin","color","radio","fontFamily","transition","title","fontWeight","fontSize","marginBottom","control","btn","flexDirection","padding","spacing","props","content","classes","useStyles","RadioGroup","aria-label","className","FormControlLabel","Radio","label","withFormik","displayName","enableReinitialize","mapPropsToValues","handleSubmit","resetForm","setSubmitting","JSON","stringify","push","handleChange","handleBlur","handleReset","isSubmitting","onSubmit","Grid","container","justify","style","item","md","xs","FormControl","onChange","onBlur","fullWidth","Question","Button","type","disabled","onClick","optionsLevel","useState","data","setData","InputLabel","Select","evt","target","map","opt","MenuItem","key","to","exact","path","Form","root","backgroundColor","Appbar","Header","Subheader","rootElement","document","getElementById","ReactDOM","render","App"],"mappings":"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","file":"static/js/main.d51d7d9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hog-bg.61b7c23b.webp\";","module.exports = __webpack_public_path__ + \"static/media/hp-title.767b51a5.png\";","import { AppBar, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\nexport const Nav = styled(AppBar)`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  height: 50px;\n  padding: 0px 10px;\n  background: linear-gradient(\n    to right,\n    rgba(0,0,0,1) 0%,\n    rgba(0,0,0,0.6) 25%,\n    rgba(0,0,0,0.3) 50%,\n    transparent\n  );\n`;\n\nexport const Title = styled(Typography)`\n  color: transparent;\n  font-weight: 900;\n  -webkit-text-stroke-width: 1px;\n  -webkit-text-stroke-color: rgba(255,255,255,0.8);\n`;\n","import React, { ReactElement } from 'react';\nimport * as S from './Styles';\n\nexport default (): ReactElement => (\n  <S.Nav>\n    <S.Title\n      variant=\"h5\"\n      noWrap\n    >\n      HP\n    </S.Title>\n  </S.Nav>\n);\n","export interface IDataGame {\n  title: string,\n  subtitle: string,\n}\n\nexport const DataGame: IDataGame = {\n  title: 'Harry Potter',\n  subtitle: 'Do you know everything about it?',\n};\n","import { Typography } from '@material-ui/core';\nimport styled from 'styled-components';\nimport bg from '../../Assets/hog-bg.webp';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 700px;\n  background-image: url(${bg});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n`;\n\nexport const Title = styled(Typography)`\n  font-family: Segoe UI;\n  color: #000;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-size: 15px;\n`;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { DataGame } from '../../Interfaces/IDataGame';\nimport * as S from './Styles';\n\nimport titleIMG from '../../Assets/hp-title.png';\n\nexport default (): React.ReactElement<HTMLElement> => {\n  const { title, subtitle } = DataGame;\n\n  return (\n    <S.Container>\n      <img src={titleIMG} alt=\"title\" width=\"450px\" />\n      <S.Title\n        variant=\"h6\"\n        align=\"center\"\n      >\n        {subtitle}\n      </S.Title>\n    </S.Container>\n  );\n};\n","import { IForm } from '../../Interfaces/IForm';\n\nexport const dataPanel: IForm[] = [];\n","export interface IForm {\n  questionA: string,\n  questionB: string,\n  questionC: string,\n  questionD: string,\n  questionE: string,\n  questionF: string,\n  questionG: string,\n  questionH: string,\n  questionI: string,\n  questionJ: string,\n}\n\nexport const initialValues: IForm = {\n  questionA: '',\n  questionB: '',\n  questionC: '',\n  questionD: '',\n  questionE: '',\n  questionF: '',\n  questionG: '',\n  questionH: '',\n  questionI: '',\n  questionJ: '',\n};\n","export interface IPrimativeQuestion {\n  id: number,\n  name: string,\n  question: string,\n  answerA: string,\n  answerB: string,\n  answerC: string,\n  answerD: string,\n}\n\nexport interface IQuestion {\n  content: IPrimativeQuestion;\n  value: any;\n}\n\nexport const Questions: IPrimativeQuestion[] = [\n  {\n    id: 1,\n    name: 'questionA',\n    question: 'Qual era a casa para qual o chapéu seletor queria enviar Harry Potter?',\n    answerA: 'Grifinória',\n    answerB: 'Sonserina',\n    answerC: 'Lufa-Lufa',\n    answerD: 'Corvinal',\n  },\n  {\n    id: 2,\n    name: 'questionB',\n    question: 'Quantas casas existem em Hogwarts?',\n    answerA: '4',\n    answerB: '3',\n    answerC: '2',\n    answerD: '1',\n  },\n  {\n    id: 3,\n    name: 'questionC',\n    question: 'Qual o patrono de Harry Potter?',\n    answerA: 'Garça',\n    answerB: 'Elefante',\n    answerC: 'Cervo',\n    answerD: 'Pomba',\n  },\n  {\n    id: 4,\n    name: 'questionD',\n    question: 'Quem é Alvo Dumbledore?',\n    answerA: 'Diretor de Hogwarts',\n    answerB: 'Professor em Hogwarts',\n    answerC: 'Pai de Harry Potter',\n    answerD: 'Um comensal da morte',\n  },\n  {\n    id: 5,\n    name: 'questionE',\n    question: 'Qual o nome da autora de Harry Potter?',\n    answerA: 'Belatrix Lestrange',\n    answerB: 'Minerva McGonal',\n    answerC: 'Ravena Ravenclaw',\n    answerD: 'J.K. Rowling',\n  },\n  {\n    id: 6,\n    name: 'questionF',\n    question: 'Qual era o nome do rato de Rony Wesley?',\n    answerA: 'Picucho',\n    answerB: 'Rabixo',\n    answerC: 'Perebas',\n    answerD: 'Manicoto',\n  },\n  {\n    id: 7,\n    name: 'questionG',\n    question: 'Quem é Voldemort?',\n    answerA: 'O autor de Harry Potter',\n    answerB: 'Diretor de Hogwarts',\n    answerC: 'O maior bruxo das trevas',\n    answerD: 'Ministro da magia',\n  },\n  {\n    id: 8,\n    name: 'questionH',\n    question: 'O que Sirius Black era de Harry Potter?',\n    answerA: 'Pai',\n    answerB: 'Tio',\n    answerC: 'Padrinho',\n    answerD: 'Primo',\n  },\n  {\n    id: 9,\n    name: 'questionI',\n    question: 'Qual era a cerveja tomada pelos jovens em Hogsmeade?',\n    answerA: 'Apimentada',\n    answerB: 'Amanteigada',\n    answerC: 'Caramelizada',\n    answerD: 'Pilsen',\n  },\n  {\n    id: 10,\n    name: 'questionJ',\n    question: 'Para que servia a pedra filosofal no primeiro filme?',\n    answerA: 'Ajudar Voldemort a restaurar seu poder',\n    answerB: 'Matar Voldemort',\n    answerC: 'Curar qualquer dor',\n    answerD: 'Trazer riquezas sem medida a quem a portasse',\n  },\n];\n","/* eslint-disable no-alert */\nimport { IForm } from '../Interfaces/IForm';\n\nexport const VerifyAnswer = (values: IForm): void => {\n  let value = 0;\n\n  if (values.questionA === 'A') value += 10;\n  if (values.questionB === 'A') value += 10;\n  if (values.questionC === 'C') value += 10;\n  if (values.questionD === 'A') value += 10;\n  if (values.questionE === 'D') value += 10;\n  if (values.questionF === 'C') value += 10;\n  if (values.questionG === 'C') value += 10;\n  if (values.questionH === 'C') value += 10;\n  if (values.questionI === 'B') value += 10;\n  if (values.questionJ === 'A') value += 10;\n\n  switch (value) {\n    case 10: {\n      alert('Acertou 1');\n      window.location.reload();\n      break;\n    }\n    case 20: {\n      alert('Acertou 2');\n      window.location.reload();\n      break;\n    }\n    case 30: {\n      alert('Acertou 3');\n      window.location.reload();\n      break;\n    }\n    case 40: {\n      alert('Acertou 4');\n      window.location.reload();\n      break;\n    }\n    case 50: {\n      alert('Acertou 5');\n      window.location.reload();\n      break;\n    }\n    case 60: {\n      alert('Acertou 6');\n      window.location.reload();\n      break;\n    }\n    case 70: {\n      alert('Acertou 7');\n      window.location.reload();\n      break;\n    }\n    case 80: {\n      alert('Acertou 8');\n      window.location.reload();\n      break;\n    }\n    case 90: {\n      alert('Acertou 9');\n      window.location.reload();\n      break;\n    }\n    case 100: {\n      alert('Acertou TUDO, parabéns!');\n      window.location.reload();\n      break;\n    }\n    default: {\n      alert('Errrrrrrrrrou!');\n      window.location.reload();\n    }\n  }\n};\n\nexport const VerifyHat = (values: IForm): void => {\n  let value = 0;\n\n  if (values.questionA === 'A') value += 10;\n  if (values.questionB === 'A') value += 10;\n  if (values.questionC === 'C') value += 10;\n  if (values.questionD === 'A') value += 10;\n  if (values.questionE === 'D') value += 10;\n  if (values.questionF === 'C') value += 10;\n  if (values.questionG === 'C') value += 10;\n  if (values.questionH === 'C') value += 10;\n  if (values.questionI === 'B') value += 10;\n  if (values.questionJ === 'A') value += 10;\n\n  switch (value) {\n    case 10: {\n      alert('Lufa-Lufa');\n      window.location.reload();\n      break;\n    }\n    case 20: {\n      alert('Lufa-Lufa');\n      window.location.reload();\n      break;\n    }\n    case 30: {\n      alert('Corvinal');\n      window.location.reload();\n      break;\n    }\n    case 40: {\n      alert('Corvinal');\n      window.location.reload();\n      break;\n    }\n    case 50: {\n      alert('Corvinal');\n      window.location.reload();\n      break;\n    }\n    case 60: {\n      alert('Sonserina');\n      window.location.reload();\n      break;\n    }\n    case 70: {\n      alert('Sonserina');\n      window.location.reload();\n      break;\n    }\n    case 80100: {\n      alert('Grifinória');\n      window.location.reload();\n      break;\n    }\n    case 90: {\n      alert('Grifinória');\n      window.location.reload();\n      break;\n    }\n    case 100: {\n      alert('Grifinória');\n      window.location.reload();\n      break;\n    }\n    default: {\n      alert('Lufa-Lufa');\n      window.location.reload();\n    }\n  }\n};\n","import { Theme, makeStyles } from '@material-ui/core/styles';\n\ninterface IStyles {\n  main: any;\n  radio: any;\n  title: any;\n  control: any;\n  btn: any;\n}\n\nexport default makeStyles((theme: Theme): IStyles => ({\n  main: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '20px 0px',\n    color: '#fff',\n  },\n  radio: {\n    '& .MuiRadio-root': {\n      color: '#ff7826',\n    },\n    margin: '10px 0px',\n    '& span': {\n      fontFamily: 'Poppins',\n    },\n    '& .Mui-focused': {\n      transition: 'none',\n    },\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: '1rem',\n    fontFamily: 'Poppins',\n    marginBottom: '10px',\n  },\n  control: {\n    marginBottom: '15px',\n  },\n  btn: {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: theme.spacing(2),\n    '@media(max-width: 767px)': {\n      flexDirection: 'column',\n      padding: theme.spacing(2),\n    },\n  },\n}));\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport {\n  InputLabel, RadioGroup, Radio, FormControlLabel,\n} from '@material-ui/core';\nimport { IPrimativeQuestion, IQuestion } from '../../Interfaces/IQuestion';\nimport useStyles from './Styles';\n\nexport default (props: IQuestion): React.ReactElement<HTMLElement> => {\n  const { content, value } = props;\n  const classes = useStyles();\n\n  return (\n    <RadioGroup\n      aria-label={content.name}\n      name={content.name}\n      value={value}\n      className={classes.radio}\n    >\n      <span className={classes.title}>{content.question}</span>\n      <FormControlLabel value=\"A\" control={<Radio color=\"primary\" />} label={content.answerA} />\n      <FormControlLabel value=\"B\" control={<Radio color=\"primary\" />} label={content.answerB} />\n      <FormControlLabel value=\"C\" control={<Radio color=\"primary\" />} label={content.answerC} />\n      <FormControlLabel value=\"D\" control={<Radio color=\"primary\" />} label={content.answerD} />\n    </RadioGroup>\n  );\n};\n","/* eslint-disable no-shadow */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react';\nimport { FormikProps, withFormik } from 'formik';\nimport {\n  Grid, InputLabel, Button, RadioGroup, Radio, FormLabel, FormControlLabel, FormControl,\n} from '@material-ui/core';\nimport Panel from '../Panel/Panel';\nimport { IGender, Genders } from '../../Interfaces/IGenders';\nimport { dataPanel } from '../Panel/IPanel';\nimport { IForm, initialValues } from '../../Interfaces/IForm';\nimport { IQuestion, Questions } from '../../Interfaces/IQuestion';\nimport { VerifyHat } from '../../Utils/Verify';\nimport useStyles from './Styles';\nimport Question from './Question';\n\nconst MyForm = (props: FormikProps<IForm>): React.ReactElement<HTMLElement> => {\n  const classes = useStyles();\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleReset,\n    handleSubmit,\n    isSubmitting,\n  } = props;\n\n  const questionValues = ['A', 'B', 'C', 'D'];\n\n  return (\n    <>\n      <div className={classes.main}>\n        <form onSubmit={handleSubmit}>\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <h1 style={{ color: 'red', fontSize: '50px' }}>1</h1>\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[0]}\n                  value={values.questionA}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[1]}\n                  value={values.questionB}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[2]}\n                  value={values.questionC}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[3]}\n                  value={values.questionD}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[4]}\n                  value={values.questionE}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[5]}\n                  value={values.questionF}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[6]}\n                  value={values.questionG}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[7]}\n                  value={values.questionH}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[8]}\n                  value={values.questionI}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[9]}\n                  value={values.questionJ}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12} className={classes.btn}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n              >\n                Complete\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                onClick={handleReset}\n                fullWidth\n              >\n                Reset\n              </Button>\n            </Grid>\n\n            {/* <Grid item md={6} xs={6}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n              >\n                Click\n              </Button>\n            </Grid>\n            <Grid item md={6} xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                onClick={handleReset}\n                fullWidth\n              >\n                Reset\n              </Button>\n            </Grid> */}\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default withFormik({\n  displayName: 'Form',\n  enableReinitialize: true,\n  mapPropsToValues: (): IForm => (initialValues),\n  handleSubmit: (values: IForm, { resetForm, setSubmitting }): void => {\n    // eslint-disable-next-line no-alert\n    alert(JSON.stringify(values));\n    dataPanel.push({\n      questionA: values.questionA,\n      questionB: values.questionB,\n      questionC: values.questionC,\n      questionD: values.questionD,\n      questionE: values.questionE,\n      questionF: values.questionF,\n      questionG: values.questionG,\n      questionH: values.questionH,\n      questionI: values.questionI,\n      questionJ: values.questionJ,\n    });\n    VerifyHat(values);\n    resetForm();\n    setSubmitting(false);\n  },\n})(MyForm);\n","import { Theme, makeStyles } from '@material-ui/core/styles';\n\ninterface IStyles {\n  main: any;\n  radio: any;\n  title: any;\n  control: any;\n  btn: any;\n}\n\nexport default makeStyles((theme: Theme): IStyles => ({\n  main: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '20px 0px',\n    color: '#fff',\n  },\n  radio: {\n    '& .MuiRadio-root': {\n      color: '#ff7826',\n    },\n    margin: '10px 0px',\n    '& span': {\n      fontFamily: 'Poppins',\n    },\n    '& .Mui-focused': {\n      transition: 'none',\n    },\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: '1rem',\n    fontFamily: 'Poppins',\n    marginBottom: '10px',\n  },\n  control: {\n    marginBottom: '15px',\n  },\n  btn: {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: theme.spacing(2),\n    '@media(max-width: 767px)': {\n      flexDirection: 'column',\n      padding: theme.spacing(2),\n    },\n  },\n}));\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport {\n  InputLabel, RadioGroup, Radio, FormControlLabel,\n} from '@material-ui/core';\nimport { IPrimativeQuestion, IQuestion } from '../../Interfaces/IQuestion';\nimport useStyles from './Styles';\n\nexport default (props: IQuestion): React.ReactElement<HTMLElement> => {\n  const { content, value } = props;\n  const classes = useStyles();\n\n  return (\n    <RadioGroup\n      aria-label={content.name}\n      name={content.name}\n      value={value}\n      className={classes.radio}\n    >\n      <span className={classes.title}>{content.question}</span>\n      <FormControlLabel value=\"A\" control={<Radio color=\"primary\" />} label={content.answerA} />\n      <FormControlLabel value=\"B\" control={<Radio color=\"primary\" />} label={content.answerB} />\n      <FormControlLabel value=\"C\" control={<Radio color=\"primary\" />} label={content.answerC} />\n      <FormControlLabel value=\"D\" control={<Radio color=\"primary\" />} label={content.answerD} />\n    </RadioGroup>\n  );\n};\n","/* eslint-disable no-shadow */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react';\nimport { FormikProps, withFormik } from 'formik';\nimport {\n  Grid, InputLabel, Button, RadioGroup, Radio, FormLabel, FormControlLabel, FormControl,\n} from '@material-ui/core';\nimport Panel from '../Panel/Panel';\nimport { IGender, Genders } from '../../Interfaces/IGenders';\nimport { dataPanel } from '../Panel/IPanel';\nimport { IForm, initialValues } from '../../Interfaces/IForm';\nimport { IQuestion, Questions } from '../../Interfaces/IQuestion';\nimport { VerifyHat } from '../../Utils/Verify';\nimport useStyles from './Styles';\nimport Question from './Question';\n\nconst MyForm = (props: FormikProps<IForm>): React.ReactElement<HTMLElement> => {\n  const classes = useStyles();\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleReset,\n    handleSubmit,\n    isSubmitting,\n  } = props;\n\n  const questionValues = ['A', 'B', 'C', 'D'];\n\n  return (\n    <>\n      <div className={classes.main}>\n        <form onSubmit={handleSubmit}>\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <h1 style={{ color: 'red', fontSize: '50px' }}>2</h1>\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[0]}\n                  value={values.questionA}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[1]}\n                  value={values.questionB}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[2]}\n                  value={values.questionC}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[3]}\n                  value={values.questionD}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[4]}\n                  value={values.questionE}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[5]}\n                  value={values.questionF}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[6]}\n                  value={values.questionG}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[7]}\n                  value={values.questionH}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[8]}\n                  value={values.questionI}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[9]}\n                  value={values.questionJ}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12} className={classes.btn}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n              >\n                Complete\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                onClick={handleReset}\n                fullWidth\n              >\n                Reset\n              </Button>\n            </Grid>\n\n            {/* <Grid item md={6} xs={6}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n              >\n                Click\n              </Button>\n            </Grid>\n            <Grid item md={6} xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                onClick={handleReset}\n                fullWidth\n              >\n                Reset\n              </Button>\n            </Grid> */}\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default withFormik({\n  displayName: 'Form',\n  enableReinitialize: true,\n  mapPropsToValues: (): IForm => (initialValues),\n  handleSubmit: (values: IForm, { resetForm, setSubmitting }): void => {\n    // eslint-disable-next-line no-alert\n    alert(JSON.stringify(values));\n    dataPanel.push({\n      questionA: values.questionA,\n      questionB: values.questionB,\n      questionC: values.questionC,\n      questionD: values.questionD,\n      questionE: values.questionE,\n      questionF: values.questionF,\n      questionG: values.questionG,\n      questionH: values.questionH,\n      questionI: values.questionI,\n      questionJ: values.questionJ,\n    });\n    VerifyHat(values);\n    resetForm();\n    setSubmitting(false);\n  },\n})(MyForm);\n","import { Theme, makeStyles } from '@material-ui/core/styles';\n\ninterface IStyles {\n  main: any;\n  radio: any;\n  title: any;\n  control: any;\n  btn: any;\n}\n\nexport default makeStyles((theme: Theme): IStyles => ({\n  main: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '20px 0px',\n    color: '#fff',\n  },\n  radio: {\n    '& .MuiRadio-root': {\n      color: '#ff7826',\n    },\n    margin: '10px 0px',\n    '& span': {\n      fontFamily: 'Poppins',\n    },\n    '& .Mui-focused': {\n      transition: 'none',\n    },\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: '1rem',\n    fontFamily: 'Poppins',\n    marginBottom: '10px',\n  },\n  control: {\n    marginBottom: '15px',\n  },\n  btn: {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: theme.spacing(2),\n    '@media(max-width: 767px)': {\n      flexDirection: 'column',\n      padding: theme.spacing(2),\n    },\n  },\n}));\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport {\n  InputLabel, RadioGroup, Radio, FormControlLabel,\n} from '@material-ui/core';\nimport { IPrimativeQuestion, IQuestion } from '../../Interfaces/IQuestion';\nimport useStyles from './Styles';\n\nexport default (props: IQuestion): React.ReactElement<HTMLElement> => {\n  const { content, value } = props;\n  const classes = useStyles();\n\n  return (\n    <RadioGroup\n      aria-label={content.name}\n      name={content.name}\n      value={value}\n      className={classes.radio}\n    >\n      <span className={classes.title}>{content.question}</span>\n      <FormControlLabel value=\"A\" control={<Radio color=\"primary\" />} label={content.answerA} />\n      <FormControlLabel value=\"B\" control={<Radio color=\"primary\" />} label={content.answerB} />\n      <FormControlLabel value=\"C\" control={<Radio color=\"primary\" />} label={content.answerC} />\n      <FormControlLabel value=\"D\" control={<Radio color=\"primary\" />} label={content.answerD} />\n    </RadioGroup>\n  );\n};\n","/* eslint-disable no-shadow */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react';\nimport { FormikProps, withFormik } from 'formik';\nimport {\n  Grid, InputLabel, Button, RadioGroup, Radio, FormLabel, FormControlLabel, FormControl,\n} from '@material-ui/core';\nimport Panel from '../Panel/Panel';\nimport { IGender, Genders } from '../../Interfaces/IGenders';\nimport { dataPanel } from '../Panel/IPanel';\nimport { IForm, initialValues } from '../../Interfaces/IForm';\nimport { IQuestion, Questions } from '../../Interfaces/IQuestion';\nimport { VerifyHat } from '../../Utils/Verify';\nimport useStyles from './Styles';\nimport Question from './Question';\n\nconst MyForm = (props: FormikProps<IForm>): React.ReactElement<HTMLElement> => {\n  const classes = useStyles();\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleReset,\n    handleSubmit,\n    isSubmitting,\n  } = props;\n\n  const questionValues = ['A', 'B', 'C', 'D'];\n\n  return (\n    <>\n      <div className={classes.main}>\n        <form onSubmit={handleSubmit}>\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <h1 style={{ color: 'red', fontSize: '50px' }}>3</h1>\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[0]}\n                  value={values.questionA}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[1]}\n                  value={values.questionB}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[2]}\n                  value={values.questionC}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[3]}\n                  value={values.questionD}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[4]}\n                  value={values.questionE}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[5]}\n                  value={values.questionF}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[6]}\n                  value={values.questionG}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[7]}\n                  value={values.questionH}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[8]}\n                  value={values.questionI}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[9]}\n                  value={values.questionJ}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12} className={classes.btn}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n              >\n                Complete\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                onClick={handleReset}\n                fullWidth\n              >\n                Reset\n              </Button>\n            </Grid>\n\n            {/* <Grid item md={6} xs={6}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n              >\n                Click\n              </Button>\n            </Grid>\n            <Grid item md={6} xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                onClick={handleReset}\n                fullWidth\n              >\n                Reset\n              </Button>\n            </Grid> */}\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default withFormik({\n  displayName: 'Form',\n  enableReinitialize: true,\n  mapPropsToValues: (): IForm => (initialValues),\n  handleSubmit: (values: IForm, { resetForm, setSubmitting }): void => {\n    // eslint-disable-next-line no-alert\n    alert(JSON.stringify(values));\n    dataPanel.push({\n      questionA: values.questionA,\n      questionB: values.questionB,\n      questionC: values.questionC,\n      questionD: values.questionD,\n      questionE: values.questionE,\n      questionF: values.questionF,\n      questionG: values.questionG,\n      questionH: values.questionH,\n      questionI: values.questionI,\n      questionJ: values.questionJ,\n    });\n    VerifyHat(values);\n    resetForm();\n    setSubmitting(false);\n  },\n})(MyForm);\n","import { Theme, makeStyles } from '@material-ui/core/styles';\n\ninterface IStyles {\n  main: any;\n  radio: any;\n  title: any;\n  control: any;\n  btn: any;\n}\n\nexport default makeStyles((theme: Theme): IStyles => ({\n  main: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    margin: '20px 0px',\n    color: '#fff',\n  },\n  radio: {\n    '& .MuiRadio-root': {\n      color: '#ff7826',\n    },\n    margin: '10px 0px',\n    '& span': {\n      fontFamily: 'Poppins',\n    },\n    '& .Mui-focused': {\n      transition: 'none',\n    },\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: '1rem',\n    fontFamily: 'Poppins',\n    marginBottom: '10px',\n  },\n  control: {\n    marginBottom: '15px',\n  },\n  btn: {\n    display: 'flex',\n    flexDirection: 'row',\n    padding: theme.spacing(2),\n    '@media(max-width: 767px)': {\n      flexDirection: 'column',\n      padding: theme.spacing(2),\n    },\n  },\n}));\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport {\n  InputLabel, RadioGroup, Radio, FormControlLabel,\n} from '@material-ui/core';\nimport { IPrimativeQuestion, IQuestion } from '../../Interfaces/IQuestion';\nimport useStyles from './Styles';\n\nexport default (props: IQuestion): React.ReactElement<HTMLElement> => {\n  const { content, value } = props;\n  const classes = useStyles();\n\n  return (\n    <RadioGroup\n      aria-label={content.name}\n      name={content.name}\n      value={value}\n      className={classes.radio}\n    >\n      <span className={classes.title}>{content.question}</span>\n      <FormControlLabel value=\"A\" control={<Radio color=\"primary\" />} label={content.answerA} />\n      <FormControlLabel value=\"B\" control={<Radio color=\"primary\" />} label={content.answerB} />\n      <FormControlLabel value=\"C\" control={<Radio color=\"primary\" />} label={content.answerC} />\n      <FormControlLabel value=\"D\" control={<Radio color=\"primary\" />} label={content.answerD} />\n    </RadioGroup>\n  );\n};\n","/* eslint-disable no-shadow */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState } from 'react';\nimport { FormikProps, withFormik } from 'formik';\nimport {\n  Grid, InputLabel, Button, RadioGroup, Radio, FormLabel, FormControlLabel, FormControl,\n} from '@material-ui/core';\nimport Panel from '../Panel/Panel';\nimport { IGender, Genders } from '../../Interfaces/IGenders';\nimport { dataPanel } from '../Panel/IPanel';\nimport { IForm, initialValues } from '../../Interfaces/IForm';\nimport { IQuestion, Questions } from '../../Interfaces/IQuestion';\nimport { VerifyHat } from '../../Utils/Verify';\nimport useStyles from './Styles';\nimport Question from './Question';\n\nconst MyForm = (props: FormikProps<IForm>): React.ReactElement<HTMLElement> => {\n  const classes = useStyles();\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleReset,\n    handleSubmit,\n    isSubmitting,\n  } = props;\n\n  const questionValues = ['A', 'B', 'C', 'D'];\n\n  return (\n    <>\n      <div className={classes.main}>\n        <form onSubmit={handleSubmit}>\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n            <h1 style={{ color: 'red', fontSize: '50px' }}>4</h1>\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[0]}\n                  value={values.questionA}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[1]}\n                  value={values.questionB}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[2]}\n                  value={values.questionC}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[3]}\n                  value={values.questionD}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[4]}\n                  value={values.questionE}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[5]}\n                  value={values.questionF}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[6]}\n                  value={values.questionG}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[7]}\n                  value={values.questionH}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[8]}\n                  value={values.questionI}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12}>\n              <FormControl\n                onChange={handleChange}\n                onBlur={handleBlur}\n                fullWidth\n              >\n                <Question\n                  content={Questions[9]}\n                  value={values.questionJ}\n                />\n              </FormControl>\n            </Grid>\n\n            <Grid item md={12} xs={12} className={classes.btn}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n              >\n                Complete\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                onClick={handleReset}\n                fullWidth\n              >\n                Reset\n              </Button>\n            </Grid>\n\n            {/* <Grid item md={6} xs={6}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n              >\n                Click\n              </Button>\n            </Grid>\n            <Grid item md={6} xs={6}>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                onClick={handleReset}\n                fullWidth\n              >\n                Reset\n              </Button>\n            </Grid> */}\n          </Grid>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default withFormik({\n  displayName: 'Form',\n  enableReinitialize: true,\n  mapPropsToValues: (): IForm => (initialValues),\n  handleSubmit: (values: IForm, { resetForm, setSubmitting }): void => {\n    // eslint-disable-next-line no-alert\n    alert(JSON.stringify(values));\n    dataPanel.push({\n      questionA: values.questionA,\n      questionB: values.questionB,\n      questionC: values.questionC,\n      questionD: values.questionD,\n      questionE: values.questionE,\n      questionF: values.questionF,\n      questionG: values.questionG,\n      questionH: values.questionH,\n      questionI: values.questionI,\n      questionJ: values.questionJ,\n    });\n    VerifyHat(values);\n    resetForm();\n    setSubmitting(false);\n  },\n})(MyForm);\n","import { Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 200px;\n  background-color: snow;\n`;\n\nexport const Title = styled(Typography)`\n  font-family: Segoe UI;\n  color: #000;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-size: 15px;\n`;\n","import React, { ReactElement, useState } from 'react';\nimport {\n  BrowserRouter as Router, Switch, Route, Link,\n} from 'react-router-dom';\nimport {\n  Button,\n  FormControl, Grid, InputLabel, MenuItem, Select,\n} from '@material-ui/core';\nimport Form1 from '../Form/Form';\nimport Form2 from '../Form2/Form';\nimport Form3 from '../Form3/Form';\nimport Form4 from '../Form4/Form';\nimport * as S from './Styles';\n\nexport interface ILevel {\n  id: number;\n  value: string;\n  name: string;\n}\n\nconst optionsLevel: ILevel[] = [\n  {\n    id: 1,\n    value: '/',\n    name: 'Easy',\n  },\n  {\n    id: 2,\n    value: '/form2',\n    name: 'Medium',\n  },\n  {\n    id: 3,\n    value: '/form3',\n    name: 'Hard',\n  },\n  {\n    id: 4,\n    value: '/form4',\n    name: 'UltraHard',\n  },\n];\n\n// const showCorrect = (data: any): ReactElement => {\n//   switch (data) {\n//     case 1: {\n//       return <Form1 />;\n//     }\n//     case 2: {\n//       return <Form2 />;\n//     }\n//     case 3: {\n//       return <Form3 />;\n//     }\n//     case 4: {\n//       return <Form4 />;\n//     }\n//     default: {\n//       return <h1>Loading...</h1>;\n//     }\n//   }\n// };\n\nexport default (): ReactElement => {\n  const [data, setData] = useState('');\n  const [f1show, setF1Show] = useState('none');\n  const [f2show, setF2Show] = useState('none');\n  const [f3show, setF3Show] = useState('none');\n  const [f4show, setF4Show] = useState('none');\n\n  const handleChange = (evt: React.ChangeEvent<any>): void => {\n    setData(evt.target.value);\n  };\n\n  // eslint-disable-next-line no-shadow\n  const showCorrect = (data: any): void => {\n    switch (data) {\n      case 1: {\n        setF1Show('flex');\n        setF2Show('none');\n        setF3Show('none');\n        setF4Show('none');\n        break;\n      }\n      case 2: {\n        setF1Show('none');\n        setF2Show('flex');\n        setF3Show('none');\n        setF4Show('none');\n        break;\n      }\n      case 3: {\n        setF1Show('none');\n        setF2Show('none');\n        setF3Show('flex');\n        setF4Show('none');\n        break;\n      }\n      case 4: {\n        setF1Show('none');\n        setF2Show('none');\n        setF3Show('none');\n        setF4Show('flex');\n        break;\n      }\n      default: {\n        setF1Show('none');\n        setF2Show('none');\n        setF3Show('none');\n        setF4Show('none');\n        break;\n      }\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <S.Container>\n          <Grid container>\n            <Grid md={8} xs={12}>\n              <FormControl\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n              >\n                <InputLabel>Select level</InputLabel>\n                <Select\n                  id=\"level\"\n                  name=\"level\"\n                  label=\"Select level\"\n                  title=\"Select a level to play\"\n                  value={data}\n                  onChange={handleChange}\n                >\n                  {\n                    optionsLevel.map((opt: ILevel): ReactElement<ILevel> => (\n                      <MenuItem key={opt.id} value={opt.id}>\n                        <Link to={`${opt.value}`}>\n                          {opt.name}\n                        </Link>\n                      </MenuItem>\n                    ))\n                  }\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </S.Container>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Form1 />\n          </Route>\n          <Route path=\"/form2\">\n            <Form2 />\n          </Route>\n          <Route path=\"/form3\">\n            <Form3 />\n          </Route>\n          <Route path=\"/form4\">\n            <Form4 />\n          </Route>\n        </Switch>\n      </Router>\n\n      {/* <div id=\"form1\" style={{ display: `${f1show}` }}>\n        <Form1 />\n      </div>\n      <div id=\"form2\" style={{ display: `${f2show}` }}>\n        <Form2 />\n      </div>\n      <div id=\"form3\" style={{ display: `${f3show}` }}>\n        <Form3 />\n      </div>\n      <div id=\"form4\" style={{ display: `${f4show}` }}>\n        <Form4 />\n      </div> */}\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\ninterface IStyles {\n  root: any;\n}\n\nexport default makeStyles((theme: Theme): IStyles => ({\n  root: {\n    backgroundColor: '#131339',\n    padding: theme.spacing(2),\n  },\n}));\n","import React from 'react';\nimport Appbar from '../Components/Appbar/Appbar';\nimport Header from '../Components/Header/Header';\nimport Subheader from '../Components/SubHeader/Subheader';\nimport Form from '../Components/Form/Form';\nimport useStyles from './Styles';\n\nexport default (): React.ReactElement<HTMLElement> => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Appbar />\n      <Header />\n      <Subheader />\n      {/* <Form /> */}\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nconst rootElement: HTMLElement | null = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}